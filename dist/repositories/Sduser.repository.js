"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,s,r,t){void 0===t&&(t=r),Object.defineProperty(e,t,{enumerable:!0,get:function(){return s[r]}})}:function(e,s,r,t){e[t=void 0===t?r:t]=s[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),__decorate=this&&this.__decorate||function(e,s,r,t){var u,o=arguments.length,i=o<3?s:null===t?t=Object.getOwnPropertyDescriptor(s,r):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,s,r,t);else for(var n=e.length-1;0<=n;n--)(u=e[n])&&(i=(o<3?u(i):3<o?u(s,r,i):u(s,r))||i);return 3<o&&i&&Object.defineProperty(s,r,i),i},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(s,e,r);return __setModuleDefault(s,e),s};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SduserRepository=void 0;const path=__importStar(require("path")),envPath=path.join(__dirname,"../configrouter.conf");require("dotenv").config({path:envPath});const env=process.env,opts={},TIMEEXPIRE=env.TIMEEXPIRE,mode=env.mode,util=require("util"),typeorm_1=require("typeorm"),Sd_users_entities_1=require("../entities/Sd_users.entities");let SduserRepository=class extends typeorm_1.Repository{finduser(e,s){return console.log("EntityRepository username "+e),console.log("EntityRepository password "+s),this.createQueryBuilder("Sd_users").select("SUM(Sd_users.user_id)","sum").select(["Sd_users.profile_id","Sd_users.user_id AS Sd_users_uid","Sd_users.user_id","Sd_users.username","Sd_users.email","Sd_users.firstname","Sd_users.lastname","Sd_users.fullname","Sd_users.level"]).where("Sd_users.username = :username",{username:e}).andWhere("Sd_users.password = :password",{password:s}).andWhere("Sd_users.status = :status",{status:1}).getMany()}singinuser(e,s){return console.log("EntityRepository username "+e),console.log("EntityRepository password "+s),this.createQueryBuilder("Sd_users").select("SUM(Sd_users.user_id)","sum").select(["Sd_users.profile_id","Sd_users.user_id AS Sd_users_uid","Sd_users.user_id","Sd_users.username","Sd_users.email","Sd_users.firstname","Sd_users.lastname","Sd_users.fullname","Sd_users.level"]).where("Sd_users.username = :username",{username:e}).andWhere("Sd_users.password = :password",{password:s}).andWhere("Sd_users.status = :status",{status:1}).getMany()}};SduserRepository=__decorate([(0,typeorm_1.EntityRepository)(Sd_users_entities_1.Sd_users)],SduserRepository),exports.SduserRepository=SduserRepository;