"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,s){void 0===s&&(s=i),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,s){e[s=void 0===s?i:s]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const fastify=__importStar(require("fastify")),path=__importStar(require("path")),util=require("util"),multer=require("fastify-multer"),autoload=require("fastify-autoload");require("reflect-metadata");var envPath=path.join(__dirname,"../.env");require("dotenv").config({path:envPath});const env=process.env,opts={};if("production"===process.env.NODE_ENV){const envPath=path.join(__dirname,"../configprod.conf");require("dotenv").config({path:envPath});const env=process.env,address=env.address,port_main=env.PORT;console.log("production DB1_HOST: ",env.DB1_HOST),console.log("production DB1_NAME: ",env.DB1_NAME)}else if("development"===process.env.NODE_ENV){const envPath=path.join(__dirname,"../configdev.conf");require("dotenv").config({path:envPath});const env=process.env,address=env.address,port_main=env.PORT;console.log("development DB1_HOST: ",env.DB1_HOST),console.log("development DB1_NAME: ",env.DB1_NAME)}else{const envPath=path.join(__dirname,"../configlocal.conf");require("dotenv").config({path:envPath});const env=process.env,address=env.address,port_main=env.PORT;console.log("local DB1_HOST: ",env.DB1_HOST),console.log("local DB1_NAME: ",env.DB1_NAME)}const port_main=env.PORT,address=env.address,router_1=__importDefault(require("./router")),app=fastify.fastify({logger:{level:"info"}});app.decorate("timeset",{expirein:"1days"}),app.register(multer.contentParser),app.register(require("fastify-cors"),{}),app.register(require("fastify-formbody")),app.register(require("./system/database/mysqldb"),{options:{client:"mysql2",connection:{host:env.DB1_HOST,port:Number(env.DB1_PORT),user:env.DB1_USER,password:env.DB1_PASSWORD,database:env.DB1_NAME},debug:!0},connectionName:"db1"}),app.register(require("./system/database/mysqldb"),{options:{client:"mysql2",connection:{host:env.DB2_HOST,port:Number(env.DB2_PORT),user:env.DB2_USER,password:env.DB2_PASSWORD,database:env.DB2_NAME},debug:!0},connectionName:"db2"}),app.register(require("./system/plugins/jwt"),{secret:env.JWT_SECRET}),app.register(require("fastify-static"),{root:path.join(__dirname,"../public"),prefix:"/assets/"}),app.register(require("point-of-view"),{engine:{ejs:require("ejs"),root:path.join(__dirname,"../views")},includeViewExtension:!0});const path_entities1=env.path_entities1,path_entities2=env.path_entities2,path_entities=env.path_entities,entities_Path=path.join(__dirname,"../"+path_entities+"/entities/*{.ts,.js}"),migrations_Path=path.join(__dirname,"../"+path_entities+"/migration/**/*.ts"),subscribers_Path=path.join(__dirname,"../"+path_entities+"/subscriber/**/*.ts"),entities_Dir=path.join(__dirname,"../"+path_entities+"/entities/"),migrations_Dir=path.join(__dirname,"../"+path_entities+"/migration/"),subscribers_Dir=path.join(__dirname,"../"+path_entities+"/subscriber/");console.log("typeorm is Path : ",util.inspect("entities_Path :"+entities_Path,{showHidden:!0,depth:!0,colors:!0})),console.log("typeorm is Path : ",util.inspect("migrations_Path :"+migrations_Path,{showHidden:!0,depth:!0,colors:!0})),console.log("typeorm is Path : ",util.inspect("subscribers_Path :"+subscribers_Path,{showHidden:!0,depth:!0,colors:!0})),console.log("typeorm is Dir : ",util.inspect(" entities_Path : "+entities_Dir,{showHidden:!0,depth:!0,colors:!0})),console.log("typeorm is Dir : ",util.inspect(" path_entities1 : "+migrations_Dir,{showHidden:!0,depth:!0,colors:!0})),console.log("typeorm is Dir : ",util.inspect(" path_entities2 : "+subscribers_Dir,{showHidden:!0,depth:!0,colors:!0}));const typeorm_1=require("typeorm");(0,typeorm_1.createConnection)({type:"mysql",host:env.DB1_HOST,port:Number(env.DB1_PORT),username:env.DB1_USER,password:env.DB1_PASSWORD,database:env.DB1_NAME,logging:!0,entities:[entities_Path],migrations:[migrations_Path],subscribers:[subscribers_Path],cli:{entitiesDir:entities_Dir,migrationsDir:migrations_Dir,subscribersDir:subscribers_Dir}}).then(e=>{console.log("typeorm is Connection : ",util.inspect(" database : "+env.DB1_NAME+" status :"+e.isConnected,{showHidden:!0,depth:!0,colors:!0}))}).catch(e=>{console.error("typeorm Unable to connect to the database:",e)}),app.register(router_1.default),exports.default=app;